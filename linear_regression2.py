# -*- coding: utf-8 -*-
"""linear regression-TMU-2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1IJDeNtxYmKsRQc-uZZUaapNG8V5uWY37
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import keras

"""**Dataset**

Dataset [download here](https://www.kaggle.com/datasets/maajdl/yeh-concret-data)
"""

ds = pd.read_csv('Concrete_Data_Yeh.csv')
ds = ds.sample(frac=1.).reset_index(drop=True)
ds.head()
 # split data
 train = ds.sample(frac=0.8)
test = ds.drop(index=train.index).reset_index(drop=True)
train = train.reset_index(drop=True)
X_train = train.drop(columns=['csMPa'])
y_train = train['csMPa']
X_test = test.drop(columns=['csMPa'])
y_test = test['csMPa']

"""**Normalization**"""

mean = X_train.mean()
std = X_train.std()
X_train_n = (X_train - mean) / std
X_test_n = (X_test - mean) / std

"""**Model**"""

model = keras.Sequential([keras.layers.Dense(1, input_shape=(8,))])
model.summary()

model.compile(optimizer='adam', loss='mse')
model.fit(X_test_n, y_test, batch_size=32, epochs=100)

print(model.weights)